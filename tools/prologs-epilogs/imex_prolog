#!/bin/bash
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Slurm Prolog for NVIDIA Imex

if ! systemctl list-unit-files --all | grep -Fq "nvidia-imex.service"; then
  exit 0
fi

activate_imex() {
  set -ex

  # Clean the config file in case the service gets started by accident
  > /etc/nvidia-imex/nodes_config.cfg

  NVIDIA_IMEX_STOP_TIMEOUT=15
  IMEX_CONN_WAIT_TIMEOUT=70
  IMEX_SERVER_PORT=1101
  IMEX_CMD_PORT=1102

  # clean up prev connection
  set +e
  timeout $NVIDIA_IMEX_STOP_TIMEOUT systemctl stop nvidia-imex
  pkill -9 nvidia-imex
  set -e

  # Actively poll to see if the port is free before proceeding.
  PORT_TO_CHECK=${IMEX_SERVER_PORT}
  MAX_WAIT_SECONDS=60
  for ((i=0; i<MAX_WAIT_SECONDS; i++)); do
    if ! ss -lnt | grep -q ":${PORT_TO_CHECK}\s"; then
      break # Port is free, exit loop
    fi
    sleep 1
  done
  if ((i == MAX_WAIT_SECONDS)); then
    echo "IMEX Prolog Error: Port ${PORT_TO_CHECK} did not become free within ${MAX_WAIT_SECONDS}s." >&2
    exit 1
  fi

  # update peer list
  scontrol -a show node "${SLURM_NODELIST}" -o | sed 's/^.* NodeAddr=\([^ ]*\).*/\1/' > /etc/nvidia-imex/nodes_config.cfg

  # configure port and enable imex-ctl
  sed -i "s/SERVER_PORT.*/SERVER_PORT=${IMEX_SERVER_PORT}/" /etc/nvidia-imex/config.cfg
  sed -i "s/IMEX_CMD_PORT.*/IMEX_CMD_PORT=${IMEX_CMD_PORT}/" /etc/nvidia-imex/config.cfg
  sed -i "s/IMEX_CMD_ENABLED.*/IMEX_CMD_ENABLED=1/" /etc/nvidia-imex/config.cfg
  sed -i "s/IMEX_CONN_WAIT_TIMEOUT.*/IMEX_CONN_WAIT_TIMEOUT=${IMEX_CONN_WAIT_TIMEOUT}/" /etc/nvidia-imex/config.cfg

  systemctl start nvidia-imex

  # Actively poll to see if the service started successfully.
  MAX_WAIT_SECONDS=20
  for ((i=0; i<MAX_WAIT_SECONDS; i++)); do
    if systemctl is-active --quiet nvidia-imex; then
      break # Service is active, exit loop
    fi
    sleep 1
  done
  if ((i == MAX_WAIT_SECONDS)); then
    echo "IMEX Prolog Error: nvidia-imex service did not start within ${MAX_WAIT_SECONDS}s." >&2
    # Check the journal for errors
    journalctl -u nvidia-imex --no-pager -n 20
    exit 1
  fi
}
activate_imex >> "/var/log/slurm/imex_prolog_${SLURM_JOB_ID}.log" 2>&1
