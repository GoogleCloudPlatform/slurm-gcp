# Copyright 2021 SchedMD LLC.
# Modified for use with the Slurm Resource Manager.
#
# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: A template for creating a Slurm cluster.
  author: SchedMD LLC
  description: |
    Create a Slurm cluster in GCP.

imports:
- path: slurm-cluster.jinja
- name: common.py
  path: common/common.py
- name: default.py
  path: common/default.py
- name: password.py
  path: common/password.py
- name: path_utils.jinja
  path: common/path_utils.jinja
- name: vm_instance.py
  path: common/vm_instance.py

required:
- cluster_name
- zone
- controller_machine_type
- login_machine_type
- compute_partition_name
- compute_machine_type
- compute_max_node_count

optional:
- network
- subnetwork
- controller_external_ip
- login_external_ip
- compute_external_ip
- login_node_count
- suspend_time
- compute_gpu_count
- compute_gpu_type
- compute_preemptible
- compute_static_node_count

properties:
  cluster_name:
    type        : string
    description : Name of the cluster

  zone:
    type        : string
    description : Zone to run the instances in based on Region.

  network:
    type        : string
    default     : default
    description : The name of the pre-defined VPC network you want the nodes
                  to attach to based on Region.

  subnetwork:
    type        : string
    default     : default
    description : The name of the pre-defined VPC subnet you want the nodes
                  to attach to based on Region.

  controller_external_ip:
    type        : boolean
    default     : False
    description : Whether the controller instance is assigned an external ip or not.
                  Sets up Cloud NAT gateway if false.

  controller_machine_type:
    type        : string
    default     : n1-standard-2
    description : Machine type to use for the controller instance.
                  eg. n1-standard-4.

  login_machine_type:
    type        : string
    default     : n1-standard-2
    description : Machine type to use for login node instances, eg.
                  n1-standard-4.

  login_labels:
    type        : array
    default     : []
    description : Labels to add to login instances. List of key key, value
                  pairs.
  login_node_count:
    type        : integer
    default     : 1
    description : Number of login nodes in the cluster.

  login_external_ip:
    type        : boolean
    default     : False
    description : Whether login instances are assigned external IPS or not. Sets up Cloud NAT
                  gateway if false.

  suspend_time:
    type        : integer
    default     : 300
    minimum     : 300
    description : Idle time to wait before nodes go away (in sec)
                  From Slurm Power Save Documentation
                  Nodes become eligible for power saving mode after being idle
                  for this number of seconds. For efficient system utilization,
                  it is recommended that the value of SuspendTime be at least
                  as large as the sum of SuspendTimeout plus ResumeTimeout. For
                  slurm-gcp, note that SuspendTimeout and ResumeTimeout are
                  hard-coded at 300s in scripts/startup-script.py

  compute_external_ip:
    type        : boolean
    default     : False
    description : Whether compute nodes are assigned external IPs or not. Sets up Cloud NAT
                  if false.

  compute_partition_name:
    type        : string
    default     : nodes
    description : Name of the compute node partition

  compute_machine_type:
    type        : string
    default     : n1-standard-2
    description : Machine type to use for compute node instances.
                  eg. n1-standard-4.

  compute_max_node_count:
    type        : integer
    minimum     : 0
    maximum     : 10000
    default     : 10
    description : Maximum number of instances that the cluster can grow to.
                  Consider adding 10% to account for preemptible nodes.

  compute_gpu_type:
    type        : string
    enum        :
                - None
                - nvidia-tesla-k80
                - nvidia-tesla-p100
                - nvidia-tesla-v100
                - nvidia-tesla-p4
                - nvidia-tesla-t4
    default     : None
    description : GPU Type to attach to static nodes.

  compute_gpu_count:
    type        : string
    enum        : ['0', '1', '2', '4', '8']
    default     : '0'
    description : Number of GPUs to attach to each node.

  compute_preemptible:
    type        : boolean
    default     : False
    description : Whether bursted compute nodes are preemptible instances or
                  not. Make sure to choose a zone that has preemptible
                  resources.

  compute_static_node_count:
    type        : integer
    description : Number of initial instances in the cluster.
    default     : 0
